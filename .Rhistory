timeRev
start_timeRev <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[1], a[2], p = 2, algo = "revsimplex")
}
end_timeRev <- Sys.time()
timeRev <- end_timeRev - start_timeRev
start_timeNet <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[1], a[2], p = 2, algo = "networkflow")
}
end_timeNet <- Sys.time()
timeNet <- end_timeNet - start_timeNet
timeNet - timeRev
timeNet
timeRev
start_timeRev <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[1], a[2], p = 2, algo = "revsimplex")
}
end_timeRev <- Sys.time()
timeRev <- end_timeRev - start_timeRev
start_timeNet <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[1], a[2], p = 2, algo = "networkflow")
}
end_timeNet <- Sys.time()
timeNet <- end_timeNet - start_timeNet
timeNet - timeRev
timeNet
timeRev
start_timeRev <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[1], a[2], p = 2, algo = "revsimplex")
}
end_timeRev <- Sys.time()
timeRev <- end_timeRev - start_timeRev
start_timeNet <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[1], a[2], p = 2, algo = "networkflow")
}
end_timeNet <- Sys.time()
timeNet <- end_timeNet - start_timeNet
timeNet - timeRev
timeNet
timeRev
start_timeRev <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[1], a[2], p = 2, algo = "revsimplex")
}
end_timeRev <- Sys.time()
timeRev <- end_timeRev - start_timeRev
start_timeNet <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[1], a[2], p = 2, algo = "networkflow")
}
end_timeNet <- Sys.time()
timeNet <- end_timeNet - start_timeNet
timeNet - timeRev
timeNet
timeRev
start_timeRev <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[1], a[2], p = 2, algo = "revsimplex")
}
end_timeRev <- Sys.time()
timeRev <- end_timeRev - start_timeRev
start_timeNet <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[1], a[2], p = 2, algo = "networkflow")
}
end_timeNet <- Sys.time()
timeNet <- end_timeNet - start_timeNet
timeNet - timeRev
timeNet
timeRev
start_timeRev <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[1], a[2], p = 2, algo = "revsimplex")
}
end_timeRev <- Sys.time()
timeRev <- end_timeRev - start_timeRev
start_timeNet <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[1], a[2], p = 2, algo = "networkflow")
}
end_timeNet <- Sys.time()
timeNet <- end_timeNet - start_timeNet
timeNet - timeRev
timeNet
timeRev
start_timeRev <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[1], a[2], p = 2, algo = "revsimplex")
}
end_timeRev <- Sys.time()
timeRev <- end_timeRev - start_timeRev
start_timeNet <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[1], a[2], p = 2, algo = "networkflow")
}
end_timeNet <- Sys.time()
timeNet <- end_timeNet - start_timeNet
timeNet - timeRev
timeNet
timeRev
start_timeRev <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[1], a[2], p = 2, algo = "revsimplex")
}
end_timeRev <- Sys.time()
timeRev <- end_timeRev - start_timeRev
start_timeNet <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[1], a[2], p = 2, algo = "networkflow")
}
end_timeNet <- Sys.time()
timeNet <- end_timeNet - start_timeNet
timeNet - timeRev
timeNet
timeRev
start_timeRev <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[1], a[2], p = 2, algo = "revsimplex")
}
end_timeRev <- Sys.time()
timeRev <- end_timeRev - start_timeRev
start_timeNet <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[1], a[2], p = 2, algo = "networkflow")
}
end_timeNet <- Sys.time()
timeNet <- end_timeNet - start_timeNet
timeNet - timeRev
timeNet
timeRev
genpoints <- function(){
N <- 2
points <- c(10,10)
supplyPoints <- matrix(runif(N*points[1], -10,10), ncol = N)
demandPoints <- matrix(runif(N*points[2], -10,10), ncol = N)
costCreate <- runif(points[2], 1,3)
costDestruct <- runif(points[1], 1,3)
sup <- runif(points[1], 1,5)
dem <- runif(points[2], 1,5)
supplyList <- list(sup,costDestruct, supplyPoints)
demandList <- list(dem,costCreate, demandPoints)
print(sup[1])
return(c(supplyList, demandList))
}
start_timeRev <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[1], a[2], p = 2, algo = "revsimplex")
}
end_timeRev <- Sys.time()
timeRev <- end_timeRev - start_timeRev
start_timeNet <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[1], a[2], p = 2, algo = "networkflow")
}
end_timeNet <- Sys.time()
timeNet <- end_timeNet - start_timeNet
timeNet - timeRev
timeNet
timeRev
genpoints <- function(){
N <- 2
points <- c(10,10)
supplyPoints <- matrix(runif(N*points[1], -10,10), ncol = N)
demandPoints <- matrix(runif(N*points[2], -10,10), ncol = N)
costCreate <- runif(points[2], 1,3)
costDestruct <- runif(points[1], 1,3)
sup <- runif(points[1], 1,5)
dem <- runif(points[2], 1,5)
supplyList <- list(sup,costDestruct, supplyPoints)
demandList <- list(dem,costCreate, demandPoints)
return(c(supplyList, demandList))
}
start_timeRev <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[1], a[2], p = 2, algo = "revsimplex")
}
end_timeRev <- Sys.time()
timeRev <- end_timeRev - start_timeRev
start_timeNet <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[1], a[2], p = 2, algo = "networkflow")
}
end_timeNet <- Sys.time()
timeNet <- end_timeNet - start_timeNet
timeNet - timeRev
timeNet
timeRev
a <- genpoints()
a[1]
a[[1]]
a
genpoints <- function(){
N <- 2
points <- c(10,10)
supplyPoints <- matrix(runif(N*points[1], -10,10), ncol = N)
demandPoints <- matrix(runif(N*points[2], -10,10), ncol = N)
costCreate <- runif(points[2], 1,3)
costDestruct <- runif(points[1], 1,3)
sup <- runif(points[1], 1,5)
dem <- runif(points[2], 1,5)
supplyList <- list(sup,costDestruct, supplyPoints)
demandList <- list(dem,costCreate, demandPoints)
return(list(supplyList, demandList))
}
a <- genpoints()
a
a[[1]]
start_timeRev <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "revsimplex")
}
end_timeRev <- Sys.time()
timeRev <- end_timeRev - start_timeRev
start_timeNet <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[1], a[2], p = 2, algo = "networkflow")
}
end_timeNet <- Sys.time()
timeNet <- end_timeNet - start_timeNet
timeNet - timeRev
timeNet
timeRev
start_timeRev <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "revsimplex")
}
end_timeRev <- Sys.time()
timeRev <- end_timeRev - start_timeRev
start_timeNet <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "networkflow")
}
end_timeNet <- Sys.time()
timeNet <- end_timeNet - start_timeNet
timeNet - timeRev
timeNet
timeRev
start_timeRev <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "revsimplex")
}
end_timeRev <- Sys.time()
timeRev <- end_timeRev - start_timeRev
start_timeNet <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "networkflow")
}
end_timeNet <- Sys.time()
timeNet <- end_timeNet - start_timeNet
timeNet - timeRev
timeNet
timeRev
start_timeRev <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "revsimplex")
}
end_timeRev <- Sys.time()
timeRev <- end_timeRev - start_timeRev
start_timeNet <- Sys.time()
for(i in 1:1000){
a <- genpoints()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "networkflow")
}
end_timeNet <- Sys.time()
timeNet <- end_timeNet - start_timeNet
timeNet - timeRev
timeNet
timeRev
timeRev <- 0
timeNet <- 0
for(i in 1:100){
a <- genpoints()
start_timeRev <- Sys.time()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "revsimplex")
end_timeRev <- Sys.time()
timeRev <- timeRev +  end_timeRev - start_timeRev
start_timeNet <- Sys.time()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "networkflow")
end_timeNet <- Sys.time()
timeNet <- timeNet + end_timeNet - start_timeNet
}
timeNet - timeRev
timeNet
timeRev
timeRev <- 0
timeNet <- 0
for(i in 1:100){
a <- genpoints()
start_timeRev <- Sys.time()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "revsimplex")
end_timeRev <- Sys.time()
timeRev <- timeRev +  end_timeRev - start_timeRev
start_timeNet <- Sys.time()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "networkflow")
end_timeNet <- Sys.time()
timeNet <- timeNet + end_timeNet - start_timeNet
}
timeNet - timeRev
timeNet
timeRev
timeRev <- 0
timeNet <- 0
for(i in 1:100){
a <- genpoints()
start_timeRev <- Sys.time()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "revsimplex")
end_timeRev <- Sys.time()
timeRev <- timeRev +  end_timeRev - start_timeRev
start_timeNet <- Sys.time()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "networkflow")
end_timeNet <- Sys.time()
timeNet <- timeNet + end_timeNet - start_timeNet
}
timeNet - timeRev
timeNet
timeRev
timeRev <- 0
timeNet <- 0
for(i in 1:100){
a <- genpoints()
start_timeRev <- Sys.time()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "revsimplex")
end_timeRev <- Sys.time()
timeRev <- timeRev +  end_timeRev - start_timeRev
start_timeNet <- Sys.time()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "networkflow")
end_timeNet <- Sys.time()
timeNet <- timeNet + end_timeNet - start_timeNet
}
timeNet - timeRev
timeNet
timeRev
timeRev <- 0
timeNet <- 0
for(i in 1:100){
a <- genpoints()
start_timeRev <- Sys.time()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "revsimplex")
end_timeRev <- Sys.time()
timeRev <- timeRev +  end_timeRev - start_timeRev
start_timeNet <- Sys.time()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "networkflow")
end_timeNet <- Sys.time()
timeNet <- timeNet + end_timeNet - start_timeNet
}
timeNet - timeRev
timeNet
timeRev
timeRev <- 0
timeNet <- 0
for(i in 1:100){
a <- genpoints()
start_timeRev <- Sys.time()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "revsimplex")
end_timeRev <- Sys.time()
timeRev <- timeRev +  end_timeRev - start_timeRev
start_timeNet <- Sys.time()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "networkflow")
end_timeNet <- Sys.time()
timeNet <- timeNet + end_timeNet - start_timeNet
}
timeNet - timeRev
timeNet
timeRev
timeRev <- 0
timeNet <- 0
for(i in 1:100){
a <- genpoints()
start_timeRev <- Sys.time()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "revsimplex")
end_timeRev <- Sys.time()
timeRev <- timeRev +  end_timeRev - start_timeRev
start_timeNet <- Sys.time()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "networkflow")
end_timeNet <- Sys.time()
timeNet <- timeNet + end_timeNet - start_timeNet
}
timeNet - timeRev
timeNet
timeRev
timeRev <- 0
timeNet <- 0
for(i in 1:100){
a <- genpoints()
start_timeRev <- Sys.time()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "revsimplex")
end_timeRev <- Sys.time()
timeRev <- timeRev +  end_timeRev - start_timeRev
start_timeNet <- Sys.time()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "networkflow")
end_timeNet <- Sys.time()
timeNet <- timeNet + end_timeNet - start_timeNet
}
timeNet - timeRev
timeNet
timeRev
timeRev <- 0
timeNet <- 0
for(i in 1:100){
a <- genpoints()
start_timeRev <- Sys.time()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "revsimplex")
end_timeRev <- Sys.time()
timeRev <- timeRev +  end_timeRev - start_timeRev
start_timeNet <- Sys.time()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "networkflow")
end_timeNet <- Sys.time()
timeNet <- timeNet + end_timeNet - start_timeNet
}
timeNet - timeRev
timeNet
timeRev
genpoints <- function(){
N <- 10
points <- c(100,100)
supplyPoints <- matrix(runif(N*points[1], -10,10), ncol = N)
demandPoints <- matrix(runif(N*points[2], -10,10), ncol = N)
costCreate <- runif(points[2], 1,3)
costDestruct <- runif(points[1], 1,3)
sup <- runif(points[1], 1,5)
dem <- runif(points[2], 1,5)
supplyList <- list(sup,costDestruct, supplyPoints)
demandList <- list(dem,costCreate, demandPoints)
return(list(supplyList, demandList))
}
timeRev <- 0
timeNet <- 0
for(i in 1:100){
a <- genpoints()
start_timeRev <- Sys.time()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "revsimplex")
end_timeRev <- Sys.time()
timeRev <- timeRev +  end_timeRev - start_timeRev
start_timeNet <- Sys.time()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "networkflow")
end_timeNet <- Sys.time()
timeNet <- timeNet + end_timeNet - start_timeNet
}
timeNet - timeRev
timeNet
timeRev
timeRev <- 0
timeNet <- 0
for(i in 1:1000){
a <- genpoints()
start_timeRev <- Sys.time()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "revsimplex")
end_timeRev <- Sys.time()
timeRev <- timeRev +  end_timeRev - start_timeRev
start_timeNet <- Sys.time()
aa <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "networkflow")
end_timeNet <- Sys.time()
timeNet <- timeNet + end_timeNet - start_timeNet
}
timeNet - timeRev
timeNet
timeRev
for(i in 1:1){
a <- genpoints()
start_timeRev <- Sys.time()
aa1 <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "revsimplex")
print(aa1)
end_timeRev <- Sys.time()
timeRev <- timeRev +  end_timeRev - start_timeRev
start_timeNet <- Sys.time()
aa2 <- BalancedExtensionSolver(a[[1]], a[[2]], p = 2, algo = "networkflow")
print(aa2)
end_timeNet <- Sys.time()
timeNet <- timeNet + end_timeNet - start_timeNet
}
aa2 == aa1
typeof(aa1)
all.equal(aa1,aa2)
are_equal(aa1,aa2)
all.equal(aa1,aa2)
all.equal(aa1,aa2)
a
