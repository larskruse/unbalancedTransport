#
#     # plot circles as indicators for the creation/destruction cost
#     theta = seq(0, 2 * pi, length = 200)
#     for (i in 1:dim){
#         lines(x = creationDestructionCost[i] * cos(theta) + x[i], y = creationDestructionCost[i] * sin(theta) + y[i], col = "grey")
#
#         for (j in 1:dim){
#             if (transportPlan[[i,j]]>0 && i != j){
#                 curvedarrow(c(x[i],y[i]),c(x[j],y[j]), lwd = 0.5+transportPlan[[i,j]],
#                             arr.pos = 0.5, arr.adj = 0.5, arr.type = "triangle",
#                             curve = 0.2)
#             }
#         }
#     }
# }
cC <- rep(0,5,3)
cD <- rep(0.1,3)
plotTransportByCost(plan, supply = sup, demand = dem, supplyCoordinates = supplyPoints, demandCoordinates =  demandPoints,
creationCost = cD, destructionCost = cD)
plotTransportByCost <- function(transportPlan, supply = NULL, demand = NULL, supplyCoordinates = NULL, demandCoordinates = NULL,
creationCost = rep(0, length(x)), destructionCost = rep(0, length(x))){
if(is.null(dim(supplyCoordinates))){
xS <- supplyCoordinates
yS <- rep(0, length(supplyCoordinates))
xD <- demandCoordinates
yD <- rep(0,length(demandCoordinates))
}else{
xS <- supplyCoordinates[,1]
yS <- supplyCoordinates[,2]
xD <- demandCoordinates[,1]
yD <- demandCoordinates[,2]
}
# create an empty plot
plot(1, type = "n", xlab = "", ylab = "",
xlim = c(min(c(xS,xD))-0.3*abs(max(c(xS,xD))-min(c(xS,xD))),max(c(xS,xD))+0.3*abs(max(c(xS,xD))-min(c(xS,xD)))),
ylim =c(min(c(yS,yD))-0.3*abs(max(c(yS,yD))-min(c(yS,yD))),max(c(yS,yD))+0.3*abs(max(c(yS,yD))-min(c(yS,yD)))),
asp = 1)
# if a transport plan is given, add arrows to indicate mass transport
if(!is.null(transportPlan)){
# plot circles as indicators for the creation/destruction cost
theta = seq(0, 2 * pi, length = 200)
for(i in 1:length(xS)){
lines(x = destructionCost[i]*cos(theta) + xS[i], y = destructionCost[i]*sin(theta) + yS[i])
}
for(i in 1:length(xD)){
lines(x = creationCost[i]*cos(theta) + xD[i], y = creationCost[i]*sin(theta) + yD[i])
}
for (i in 1:dim){
lines(x = creationDestructionCost[i] * cos(theta) + x[i], y = creationDestructionCost[i] * sin(theta) + y[i], col = "grey")
for (j in 1:dim){
if (transportPlan[[i,j]]>0 && i != j){
curvedarrow(c(x[i],y[i]),c(x[j],y[j]), lwd = 0.5+transportPlan[[i,j]],
arr.pos = 0.5, arr.adj = 0.5, arr.type = "triangle",
curve = 0.2)
}
}
}
}
# add the points
points(c(xS,xD), c(yS,yD) , pch = 1)
# if supply and demand values are given, the color indicates the supply
# and the size indicates the mass at each point
points(xS[which(supply > 0 )],yS[which(supply > 0)],
pch = 19, cex = supply[which(supply > 0)],  col = "chartreuse3")
points(xD[which(demand > 0 )],yD[which(demand > 0)], pch = 19,
cex = abs(demand[which(demand > 0)]),  col = "dodgerblue3")
}
plotTransportByCost(plan, supply = sup, demand = dem, supplyCoordinates = supplyPoints, demandCoordinates =  demandPoints,
creationCost = cD, destructionCost = cD)
plotTransportPoints <- function(transportPlan, supply = NULL, demand = NULL, supplyCoordinates = NULL, demandCoordinates = NULL,
creationCost = rep(0, length(x)), destructionCost = rep(0, length(x))){
if(is.null(dim(supplyCoordinates))){
xS <- supplyCoordinates
yS <- rep(0, length(supplyCoordinates))
xD <- demandCoordinates
yD <- rep(0,length(demandCoordinates))
}else{
xS <- supplyCoordinates[,1]
yS <- supplyCoordinates[,2]
xD <- demandCoordinates[,1]
yD <- demandCoordinates[,2]
}
# create an empty plot
plot(1, type = "n", xlab = "", ylab = "",
xlim = c(min(c(xS,xD))-0.3*abs(max(c(xS,xD))-min(c(xS,xD))),max(c(xS,xD))+0.3*abs(max(c(xS,xD))-min(c(xS,xD)))),
ylim =c(min(c(yS,yD))-0.3*abs(max(c(yS,yD))-min(c(yS,yD))),max(c(yS,yD))+0.3*abs(max(c(yS,yD))-min(c(yS,yD)))),
asp = 1)
# if a transport plan is given, add arrows to indicate mass transport
if(!is.null(transportPlan)){
# plot circles as indicators for the creation/destruction cost
theta = seq(0, 2 * pi, length = 200)
for(i in 1:length(xS)){
lines(x = destructionCost[i]*cos(theta) + xS[i], y = destructionCost[i]*sin(theta) + yS[i])
}
for(i in 1:length(xD)){
lines(x = creationCost[i]*cos(theta) + xD[i], y = creationCost[i]*sin(theta) + yD[i])
}
# for (i in 1:dim){
#     lines(x = creationDestructionCost[i] * cos(theta) + x[i], y = creationDestructionCost[i] * sin(theta) + y[i], col = "grey")
#
#     for (j in 1:dim){
#         if (transportPlan[[i,j]]>0 && i != j){
#             curvedarrow(c(x[i],y[i]),c(x[j],y[j]), lwd = 0.5+transportPlan[[i,j]],
#                         arr.pos = 0.5, arr.adj = 0.5, arr.type = "triangle",
#                         curve = 0.2)
#         }
#     }
# }
}
# add the points
points(c(xS,xD), c(yS,yD) , pch = 1)
# if supply and demand values are given, the color indicates the supply
# and the size indicates the mass at each point
points(xS[which(supply > 0 )],yS[which(supply > 0)],
pch = 19, cex = supply[which(supply > 0)],  col = "chartreuse3")
points(xD[which(demand > 0 )],yD[which(demand > 0)], pch = 19,
cex = abs(demand[which(demand > 0)]),  col = "dodgerblue3")
}
plotTransportPoints(plan, supply = sup, demand = dem, supplyCoordinates = supplyPoints, demandCoordinates =  demandPoints,
creationCost = cD, destructionCost = cD)
plotTransportPoints <- function(transportPlan, supply = NULL, demand = NULL, supplyCoordinates = NULL, demandCoordinates = NULL,
creationCost = rep(0, length(x)), destructionCost = rep(0, length(x))){
if(is.null(dim(supplyCoordinates))){
xS <- supplyCoordinates
yS <- rep(0, length(supplyCoordinates))
xD <- demandCoordinates
yD <- rep(0,length(demandCoordinates))
}else{
xS <- supplyCoordinates[,1]
yS <- supplyCoordinates[,2]
xD <- demandCoordinates[,1]
yD <- demandCoordinates[,2]
}
# create an empty plot
plot(1, type = "n", xlab = "", ylab = "",
xlim = c(min(c(xS,xD))-0.3*abs(max(c(xS,xD))-min(c(xS,xD))),max(c(xS,xD))+0.3*abs(max(c(xS,xD))-min(c(xS,xD)))),
ylim =c(min(c(yS,yD))-0.3*abs(max(c(yS,yD))-min(c(yS,yD))),max(c(yS,yD))+0.3*abs(max(c(yS,yD))-min(c(yS,yD)))),
asp = 1)
points(c(xS,xD), c(yS,yD) , pch = 1)
points(xS[which(supply > 0 )],yS[which(supply > 0)],
pch = 19, cex = supply[which(supply > 0)],  col = "chartreuse3")
points(xD[which(demand > 0 )],yD[which(demand > 0)], pch = 19,
cex = abs(demand[which(demand > 0)]),  col = "dodgerblue3")
# if a transport plan is given, add arrows to indicate mass transport
if(!is.null(transportPlan)){
# plot circles as indicators for the creation/destruction cost
theta = seq(0, 2 * pi, length = 200)
for(i in 1:length(xS)){
lines(x = destructionCost[i]*cos(theta) + xS[i], y = destructionCost[i]*sin(theta) + yS[i])
}
for(i in 1:length(xD)){
lines(x = creationCost[i]*cos(theta) + xD[i], y = creationCost[i]*sin(theta) + yD[i])
}
# for (i in 1:dim){
#     lines(x = creationDestructionCost[i] * cos(theta) + x[i], y = creationDestructionCost[i] * sin(theta) + y[i], col = "grey")
#
#     for (j in 1:dim){
#         if (transportPlan[[i,j]]>0 && i != j){
#             curvedarrow(c(x[i],y[i]),c(x[j],y[j]), lwd = 0.5+transportPlan[[i,j]],
#                         arr.pos = 0.5, arr.adj = 0.5, arr.type = "triangle",
#                         curve = 0.2)
#         }
#     }
# }
}
# add the points
}
cC <- rep(0,1,3)
cD <- rep(0.1,3)
plotTransportPoints(plan, supply = sup, demand = dem, supplyCoordinates = supplyPoints, demandCoordinates =  demandPoints,
creationCost = cC, destructionCost = cD)
cC <- rep(1,3)
cD <- rep(1.5,3)
plotTransportPoints(plan, supply = sup, demand = dem, supplyCoordinates = supplyPoints, demandCoordinates =  demandPoints,
creationCost = cC, destructionCost = cD)
plan
plan[1,3]
plotTransportPoints <- function(transportPlan, supply = NULL, demand = NULL, supplyCoordinates = NULL, demandCoordinates = NULL,
creationCost = rep(0, length(x)), destructionCost = rep(0, length(x))){
if(is.null(dim(supplyCoordinates))){
xS <- supplyCoordinates
yS <- rep(0, length(supplyCoordinates))
xD <- demandCoordinates
yD <- rep(0,length(demandCoordinates))
}else{
xS <- supplyCoordinates[,1]
yS <- supplyCoordinates[,2]
xD <- demandCoordinates[,1]
yD <- demandCoordinates[,2]
}
# create an empty plot
plot(1, type = "n", xlab = "", ylab = "",
xlim = c(min(c(xS,xD))-0.3*abs(max(c(xS,xD))-min(c(xS,xD))),max(c(xS,xD))+0.3*abs(max(c(xS,xD))-min(c(xS,xD)))),
ylim =c(min(c(yS,yD))-0.3*abs(max(c(yS,yD))-min(c(yS,yD))),max(c(yS,yD))+0.3*abs(max(c(yS,yD))-min(c(yS,yD)))),
asp = 1)
if(!is.null(transportPlan)){
for(i in 1:length(xS)){
for(j in 1:length(xD)){
if(transportPlan[i,j] > 0){
curvedarrow(c(xS[i],yS[i]),c(xD[j],yD[j]), lwd = 0.5+transportPlan[[i,j]],
arr.pos = 0.5, arr.adj = 0.5, arr.type = "triangle",
curve = 0.2)
}
}
}
# for (i in 1:dim){
#     lines(x = creationDestructionCost[i] * cos(theta) + x[i], y = creationDestructionCost[i] * sin(theta) + y[i], col = "grey")
#
#     for (j in 1:dim){
#         if (transportPlan[[i,j]]>0 && i != j){
#             curvedarrow(c(x[i],y[i]),c(x[j],y[j]), lwd = 0.5+transportPlan[[i,j]],
#                         arr.pos = 0.5, arr.adj = 0.5, arr.type = "triangle",
#                         curve = 0.2)
#         }
#     }
# }
}
points(c(xS,xD), c(yS,yD) , pch = 1)
points(xS[which(supply > 0 )],yS[which(supply > 0)],
pch = 19, cex = supply[which(supply > 0)],  col = "chartreuse3")
points(xD[which(demand > 0 )],yD[which(demand > 0)], pch = 19,
cex = abs(demand[which(demand > 0)]),  col = "dodgerblue3")
# if a transport plan is given, add arrows to indicate mass transport
if(!is.null(transportPlan)){
# plot circles as indicators for the creation/destruction cost
theta = seq(0, 2 * pi, length = 200)
for(i in 1:length(xS)){
lines(x = destructionCost[i]*cos(theta) + xS[i], y = destructionCost[i]*sin(theta) + yS[i])
}
for(i in 1:length(xD)){
lines(x = creationCost[i]*cos(theta) + xD[i], y = creationCost[i]*sin(theta) + yD[i])
}
}
# add the points
}
plotTransportPoints(plan, supply = sup, demand = dem, supplyCoordinates = supplyPoints, demandCoordinates =  demandPoints,
creationCost = cC, destructionCost = cD)
library(diagram)
plotTransportPoints <- function(transportPlan, supply = NULL, demand = NULL, supplyCoordinates = NULL, demandCoordinates = NULL,
creationCost = rep(0, length(x)), destructionCost = rep(0, length(x))){
if(is.null(dim(supplyCoordinates))){
xS <- supplyCoordinates
yS <- rep(0, length(supplyCoordinates))
xD <- demandCoordinates
yD <- rep(0,length(demandCoordinates))
}else{
xS <- supplyCoordinates[,1]
yS <- supplyCoordinates[,2]
xD <- demandCoordinates[,1]
yD <- demandCoordinates[,2]
}
# create an empty plot
plot(1, type = "n", xlab = "", ylab = "",
xlim = c(min(c(xS,xD))-0.3*abs(max(c(xS,xD))-min(c(xS,xD))),max(c(xS,xD))+0.3*abs(max(c(xS,xD))-min(c(xS,xD)))),
ylim =c(min(c(yS,yD))-0.3*abs(max(c(yS,yD))-min(c(yS,yD))),max(c(yS,yD))+0.3*abs(max(c(yS,yD))-min(c(yS,yD)))),
asp = 1)
if(!is.null(transportPlan)){
for(i in 1:length(xS)){
for(j in 1:length(xD)){
if(transportPlan[i,j] > 0){
curvedarrow(c(xS[i],yS[i]),c(xD[j],yD[j]), lwd = 0.5+transportPlan[[i,j]],
arr.pos = 0.5, arr.adj = 0.5, arr.type = "triangle",
curve = 0.2)
}
}
}
# for (i in 1:dim){
#     lines(x = creationDestructionCost[i] * cos(theta) + x[i], y = creationDestructionCost[i] * sin(theta) + y[i], col = "grey")
#
#     for (j in 1:dim){
#         if (transportPlan[[i,j]]>0 && i != j){
#             curvedarrow(c(x[i],y[i]),c(x[j],y[j]), lwd = 0.5+transportPlan[[i,j]],
#                         arr.pos = 0.5, arr.adj = 0.5, arr.type = "triangle",
#                         curve = 0.2)
#         }
#     }
# }
}
points(c(xS,xD), c(yS,yD) , pch = 1)
points(xS[which(supply > 0 )],yS[which(supply > 0)],
pch = 19, cex = supply[which(supply > 0)],  col = "chartreuse3")
points(xD[which(demand > 0 )],yD[which(demand > 0)], pch = 19,
cex = abs(demand[which(demand > 0)]),  col = "dodgerblue3")
# if a transport plan is given, add arrows to indicate mass transport
if(!is.null(transportPlan)){
# plot circles as indicators for the creation/destruction cost
theta = seq(0, 2 * pi, length = 200)
for(i in 1:length(xS)){
lines(x = destructionCost[i]*cos(theta) + xS[i], y = destructionCost[i]*sin(theta) + yS[i])
}
for(i in 1:length(xD)){
lines(x = creationCost[i]*cos(theta) + xD[i], y = creationCost[i]*sin(theta) + yD[i])
}
}
# add the points
}
plotTransportPoints(plan, supply = sup, demand = dem, supplyCoordinates = supplyPoints, demandCoordinates =  demandPoints,
creationCost = cC, destructionCost = cD)
plotTransportPoints <- function(transportPlan, supply = NULL, demand = NULL, supplyCoordinates = NULL, demandCoordinates = NULL,
creationCost = rep(0, length(x)), destructionCost = rep(0, length(x))){
if(is.null(dim(supplyCoordinates))){
xS <- supplyCoordinates
yS <- rep(0, length(supplyCoordinates))
xD <- demandCoordinates
yD <- rep(0,length(demandCoordinates))
}else{
xS <- supplyCoordinates[,1]
yS <- supplyCoordinates[,2]
xD <- demandCoordinates[,1]
yD <- demandCoordinates[,2]
}
# create an empty plot
plot(1, type = "n", xlab = "", ylab = "",
xlim = c(min(c(xS,xD))-0.3*abs(max(c(xS,xD))-min(c(xS,xD))),max(c(xS,xD))+0.3*abs(max(c(xS,xD))-min(c(xS,xD)))),
ylim =c(min(c(yS,yD))-0.3*abs(max(c(yS,yD))-min(c(yS,yD))),max(c(yS,yD))+0.3*abs(max(c(yS,yD))-min(c(yS,yD)))),
asp = 1)
if(!is.null(transportPlan)){
for(i in 1:length(xS)){
for(j in 1:length(xD)){
if(transportPlan[i,j] > 0){
curvedarrow(c(xS[i],yS[i]),c(xD[j],yD[j]), lwd = 0.5+transportPlan[[i,j]],
arr.pos = 0.5, arr.adj = 0.5, arr.type = "triangle",
curve = 0.2, lcol = "red", arr.col = "red")
}
}
}
# for (i in 1:dim){
#     lines(x = creationDestructionCost[i] * cos(theta) + x[i], y = creationDestructionCost[i] * sin(theta) + y[i], col = "grey")
#
#     for (j in 1:dim){
#         if (transportPlan[[i,j]]>0 && i != j){
#             curvedarrow(c(x[i],y[i]),c(x[j],y[j]), lwd = 0.5+transportPlan[[i,j]],
#                         arr.pos = 0.5, arr.adj = 0.5, arr.type = "triangle",
#                         curve = 0.2)
#         }
#     }
# }
}
points(c(xS,xD), c(yS,yD) , pch = 1)
points(xS[which(supply > 0 )],yS[which(supply > 0)],
pch = 19, cex = supply[which(supply > 0)],  col = "chartreuse3")
points(xD[which(demand > 0 )],yD[which(demand > 0)], pch = 19,
cex = abs(demand[which(demand > 0)]),  col = "dodgerblue3")
# if a transport plan is given, add arrows to indicate mass transport
if(!is.null(transportPlan)){
# plot circles as indicators for the creation/destruction cost
theta = seq(0, 2 * pi, length = 200)
for(i in 1:length(xS)){
lines(x = destructionCost[i]*cos(theta) + xS[i], y = destructionCost[i]*sin(theta) + yS[i])
}
for(i in 1:length(xD)){
lines(x = creationCost[i]*cos(theta) + xD[i], y = creationCost[i]*sin(theta) + yD[i])
}
}
# add the points
}
plotTransportPoints(plan, supply = sup, demand = dem, supplyCoordinates = supplyPoints, demandCoordinates =  demandPoints,
creationCost = cC, destructionCost = cD)
plotTransportPoints <- function(transportPlan, supply = NULL, demand = NULL, supplyCoordinates = NULL, demandCoordinates = NULL,
creationCost = rep(0, length(x)), destructionCost = rep(0, length(x))){
if(is.null(dim(supplyCoordinates))){
xS <- supplyCoordinates
yS <- rep(0, length(supplyCoordinates))
xD <- demandCoordinates
yD <- rep(0,length(demandCoordinates))
}else{
xS <- supplyCoordinates[,1]
yS <- supplyCoordinates[,2]
xD <- demandCoordinates[,1]
yD <- demandCoordinates[,2]
}
# create an empty plot
plot(1, type = "n", xlab = "", ylab = "",
xlim = c(min(c(xS,xD))-0.3*abs(max(c(xS,xD))-min(c(xS,xD))),max(c(xS,xD))+0.3*abs(max(c(xS,xD))-min(c(xS,xD)))),
ylim =c(min(c(yS,yD))-0.3*abs(max(c(yS,yD))-min(c(yS,yD))),max(c(yS,yD))+0.3*abs(max(c(yS,yD))-min(c(yS,yD)))),
asp = 1)
if(!is.null(transportPlan)){
for(i in 1:length(xS)){
for(j in 1:length(xD)){
if(transportPlan[i,j] > 0){
curvedarrow(c(xS[i],yS[i]),c(xD[j],yD[j]), lwd = 0.5+transportPlan[[i,j]],
arr.pos = 0.5, arr.adj = 0.5, arr.type = "triangle",
curve = 0.5, lcol = "red", arr.col = "red")
}
}
}
}
points(c(xS,xD), c(yS,yD) , pch = 1)
points(xS[which(supply > 0 )],yS[which(supply > 0)],
pch = 19, cex = supply[which(supply > 0)],  col = "chartreuse3")
points(xD[which(demand > 0 )],yD[which(demand > 0)], pch = 19,
cex = abs(demand[which(demand > 0)]),  col = "dodgerblue3")
# if a transport plan is given, add arrows to indicate mass transport
if(!is.null(transportPlan)){
# plot circles as indicators for the creation/destruction cost
theta = seq(0, 2 * pi, length = 200)
for(i in 1:length(xS)){
lines(x = destructionCost[i]*cos(theta) + xS[i], y = destructionCost[i]*sin(theta) + yS[i])
}
for(i in 1:length(xD)){
lines(x = creationCost[i]*cos(theta) + xD[i], y = creationCost[i]*sin(theta) + yD[i])
}
}
# add the points
}
plotTransportPoints(plan, supply = sup, demand = dem, supplyCoordinates = supplyPoints, demandCoordinates =  demandPoints,
creationCost = cC, destructionCost = cD)
plotTransportPoints <- function(transportPlan, supply = NULL, demand = NULL, supplyCoordinates = NULL, demandCoordinates = NULL,
creationCost = rep(0, length(x)), destructionCost = rep(0, length(x))){
if(is.null(dim(supplyCoordinates))){
xS <- supplyCoordinates
yS <- rep(0, length(supplyCoordinates))
xD <- demandCoordinates
yD <- rep(0,length(demandCoordinates))
}else{
xS <- supplyCoordinates[,1]
yS <- supplyCoordinates[,2]
xD <- demandCoordinates[,1]
yD <- demandCoordinates[,2]
}
# create an empty plot
plot(1, type = "n", xlab = "", ylab = "",
xlim = c(min(c(xS,xD))-0.3*abs(max(c(xS,xD))-min(c(xS,xD))),max(c(xS,xD))+0.3*abs(max(c(xS,xD))-min(c(xS,xD)))),
ylim =c(min(c(yS,yD))-0.3*abs(max(c(yS,yD))-min(c(yS,yD))),max(c(yS,yD))+0.3*abs(max(c(yS,yD))-min(c(yS,yD)))),
asp = 1)
if(!is.null(transportPlan)){
for(i in 1:length(xS)){
for(j in 1:length(xD)){
if(transportPlan[i,j] > 0){
curvedarrow(c(xS[i],yS[i]),c(xD[j],yD[j]), lwd = 0.5+transportPlan[[i,j]],
arr.pos = 0.5, arr.adj = 0.5, arr.type = "triangle",
curve = 0.2, lcol = "red", arr.col = "red")
}
}
}
}
points(c(xS,xD), c(yS,yD) , pch = 1)
points(xS[which(supply > 0 )],yS[which(supply > 0)],
pch = 19, cex = supply[which(supply > 0)],  col = "chartreuse3")
points(xD[which(demand > 0 )],yD[which(demand > 0)], pch = 19,
cex = abs(demand[which(demand > 0)]),  col = "dodgerblue3")
# if a transport plan is given, add arrows to indicate mass transport
if(!is.null(transportPlan)){
# plot circles as indicators for the creation/destruction cost
theta = seq(0, 2 * pi, length = 200)
for(i in 1:length(xS)){
lines(x = destructionCost[i]*cos(theta) + xS[i], y = destructionCost[i]*sin(theta) + yS[i])
}
for(i in 1:length(xD)){
lines(x = creationCost[i]*cos(theta) + xD[i], y = creationCost[i]*sin(theta) + yD[i])
}
}
# add the points
}
plotTransportPoints(plan, supply = sup, demand = dem, supplyCoordinates = supplyPoints, demandCoordinates =  demandPoints,
creationCost = cC, destructionCost = cD)
plotTransportPoints <- function(transportPlan, supply = NULL, demand = NULL, supplyCoordinates = NULL, demandCoordinates = NULL,
creationCost = rep(0, length(x)), destructionCost = rep(0, length(x))){
if(is.null(dim(supplyCoordinates))){
xS <- supplyCoordinates
yS <- rep(0, length(supplyCoordinates))
xD <- demandCoordinates
yD <- rep(0,length(demandCoordinates))
}else{
xS <- supplyCoordinates[,1]
yS <- supplyCoordinates[,2]
xD <- demandCoordinates[,1]
yD <- demandCoordinates[,2]
}
# create an empty plot
plot(1, type = "n", xlab = "", ylab = "",
xlim = c(min(c(xS,xD))-0.3*abs(max(c(xS,xD))-min(c(xS,xD))),max(c(xS,xD))+0.3*abs(max(c(xS,xD))-min(c(xS,xD)))),
ylim =c(min(c(yS,yD))-0.3*abs(max(c(yS,yD))-min(c(yS,yD))),max(c(yS,yD))+0.3*abs(max(c(yS,yD))-min(c(yS,yD)))),
asp = 1)
if(!is.null(transportPlan)){
for(i in 1:length(xS)){
for(j in 1:length(xD)){
if(transportPlan[i,j] > 0){
curvedarrow(c(xS[i],yS[i]),c(xD[j],yD[j]), lwd = 0.5+transportPlan[[i,j]],
arr.pos = 0.5, arr.adj = 0.5, arr.type = "triangle",
curve = 0.2, lcol = "red", arr.col = "red")
}
}
}
}
points(c(xS,xD), c(yS,yD) , pch = 1)
points(xS[which(supply > 0 )],yS[which(supply > 0)],
pch = 19, cex = supply[which(supply > 0)],  col = "chartreuse3")
points(xD[which(demand > 0 )],yD[which(demand > 0)], pch = 19,
cex = abs(demand[which(demand > 0)]),  col = "dodgerblue3")
# if a transport plan is given, add arrows to indicate mass transport
if(!is.null(transportPlan)){
# plot circles as indicators for the creation/destruction cost
theta = seq(0, 2 * pi, length = 200)
for(i in 1:length(xS)){
lines(x = destructionCost[i]*cos(theta) + xS[i], y = destructionCost[i]*sin(theta) + yS[i])
}
for(i in 1:length(xD)){
lines(x = creationCost[i]*cos(theta) + xD[i], y = creationCost[i]*sin(theta) + yD[i])
}
}
}
plotTransportPoints(plan, supply = sup, demand = dem, supplyCoordinates = supplyPoints, demandCoordinates =  demandPoints,
creationCost = cC, destructionCost = cD)
plotTransportPoints(plan, supply = sup, demand = dem, supplyCoordinates = sp, demandCoordinates =  dP,
creationCost = cC, destructionCost = cD)
sP <- c(0,1,2)
dP <- c(4,5,6)
plotTransportPoints(plan, supply = sup, demand = dem, supplyCoordinates = sP, demandCoordinates =  dP,
creationCost = cC, destructionCost = cD)
library(unbalancedTransport)
library(unbalancedTransport)
